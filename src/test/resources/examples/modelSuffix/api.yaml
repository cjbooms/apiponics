openapi: 3.0.0
components:
  schemas:
    # Deep nested polymorphism
    RootDiscriminator:
      type: string
      enum:
        - firstLevelChild

    FirstLevelDiscriminator:
      type: string
      enum:
        - secondLevelChild1
        - secondLevelChild2

    SecondLevelDiscriminator:
      type: string
      enum:
        - thirdLevelChild1
        - thirdLevelChild2

    RootType:
      type: object
      required:
        - rootField1
      discriminator:
        propertyName: rootDiscriminator
        mapping:
          firstLevelChild: '#/components/schemas/FirstLevelChild'
      properties:
        rootDiscriminator:
          $ref: "#/components/schemas/RootDiscriminator"
        rootField1:
          type: string
        rootField2:
          type: boolean

    FirstLevelChild:
      allOf:
        - $ref: '#/components/schemas/RootType'
        - type: object
          required:
            - firstLevelField1
          discriminator:
            propertyName: firstLevelDiscriminator
            mapping:
              secondLevelChild1: '#/components/schemas/SecondLevelChild1'
              secondLevelChild2: '#/components/schemas/SecondLevelChild2'
          properties:
            firstLevelDiscriminator:
              $ref: '#/components/schemas/FirstLevelDiscriminator'
            firstLevelField1:
              type: string
            firstLevelField2:
              type: integer

    SecondLevelChild1:
      allOf:
        - $ref: '#/components/schemas/FirstLevelChild'
        - type: object
          required:
            - metadata
          properties:
            metadata:
              $ref: '#/components/schemas/SecondLevelMetadata'

    SecondLevelChild2:
      allOf:
        - $ref: '#/components/schemas/FirstLevelChild'
        - type: object
          required:
            - metadata
          properties:
            metadata:
              $ref: '#/components/schemas/SecondLevelMetadata'

    SecondLevelMetadata:
      type: object
      required:
        - obj
      properties:
        obj:
          $ref: "#/components/schemas/CommonObject"

    CommonObject:
      type: object
      required:
        - field1
        - field2
      properties:
        field1:
          type: string
          required: true
          nullable: false
        field2:
          type: string
          required: true
          nullable: false

    # Polymorphism
    PolymorphicTypeOneRef:
      $ref: "#/components/schemas/PolymorphicTypeOne"
    PolymorphicSuperType:
      type: object
      discriminator:
        propertyName: generation
      required:
        - generation
        - first_name
        - last_name
      properties:
        generation:
          type: string
        first_name:
          type: string
        last_name:
          type: string
    PolymorphicTypeOne:
      allOf:
        - $ref: "#/components/schemas/PolymorphicSuperType"
        - type: object
          properties:
            child_one_name:
              type: string
    # Maps
    MapHolder:
      type: object
      properties:
        wild_card:
          type: object
        string_map:
          $ref: '#/components/schemas/StringMap'
        typed_object_map:
          $ref: '#/components/schemas/TypedObjectMap'
        object_map:
          $ref: '#/components/schemas/ObjectMap'
        inlined_string_map:
          type: object
          additionalProperties:
            type: string
        inlined_object_map:
          type: object
          additionalProperties:
            type: object
        inlined_unknown_map:
          type: object
          additionalProperties: true
        inlined_typed_object_map:
          type: object
          additionalProperties:
            type: object
            properties:
              code:
                type: integer
              text:
                type: string
        complex_object_with_untyped_map:
          $ref: '#/components/schemas/ComplexObjectWithUntypedMap'
        complex_object_with_typed_map:
          $ref: '#/components/schemas/ComplexObjectWithTypedMap'
        inlined_complex_object_with_untyped_map:
          type: object
          properties:
            text:
              type: string
            code:
              type: integer
          additionalProperties: true
        inlined_complex_object_with_typed_map:
          type: object
          properties:
            text:
              type: string
            code:
              type: integer
          additionalProperties:
            type: object
            properties:
              other_text:
                type: string
              other_number:
                type: integer
      additionalProperties:
        type: object
        minProperties: 1
        additionalProperties:
          $ref: '#/components/schemas/ExternalObjectFour'

    ExternalObjectFour:
      type: object
      properties:
        blah:
          type: string

    ComplexObjectWithUntypedMap:
      type: object
      properties:
        text:
          type: string
        code:
          type: integer
      additionalProperties:
        type: object

    ComplexObjectWithTypedMap:
      type: object
      properties:
        text:
          type: string
        code:
          type: integer
      additionalProperties:
        type: object
        properties:
          other_text:
            type: string
          other_number:
            type: integer

    ComplexObjectWithRefTypedMap:
      type: object
      properties:
        text:
          type: string
        code:
          type: integer
      additionalProperties:
        $ref: '#/components/schemas/SomeRef'

    SomeRef:
      type: object
      properties:
        other_text:
          type: string
        other_number:
          type: integer

    ComplexObjectWithMapsOfMaps:
      type: object
      required:
        - errors
      properties:
        list-others:
          type: array
          items:
            $ref: '#/components/schemas/BasicObject'
        map-of-maps:
          type: object
          additionalProperties:
            type: object
            minProperties: 1
            additionalProperties:
              $ref: '#/components/schemas/BasicObject'

    BasicObject:
      type: object
      properties:
        one:
          type: string
    StringMap:
      type: object
      additionalProperties:
        type: string

    TypedObjectMap:
      type: object
      additionalProperties:
        type: object
        properties:
          code:
            type: integer
          text:
            type: string

    ObjectMap:
      type: object
      additionalProperties:
        type: object

    # Enums
    EnumHolder:
      type: object
      properties:
        array_of_enums:
          type: array
          items:
            type: string
            x-extensible-enum:
              - array_enum_one
              - array_enum_two
        inlined_enum:
          type: string
          enum:
            - inlined_one
            - inlined_two
            - inlined_three
        inlined_extensible_enum:
          type: string
          x-extensible-enum:
            - inlined_one
            - inlined_two
            - inlined_three
        enum_ref:
          $ref: '#/components/schemas/EnumObject'
        list_enums:
          $ref: '#/components/schemas/ListEnums'

    EnumObject:
      type: string
      enum:
        - one
        - two
        - three
        - 4
        - -5
        - _6

    ListEnums:
      type: array
      items:
        type: string

    FooBars:
      type: object
      properties:
        prop_one:
          $ref: '#/components/schemas/Foo'
        prop_two:
          $ref: '#/components/schemas/Bar'

    Foo:
      type: array
      items:
        type: string
        enum:
          - X
          - Y
    Bar:
      type: array
      items:
        type: object
        properties:
          bar_prop:
            type: string



