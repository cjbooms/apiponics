openapi: 3.0.0
info:
paths:
components:
  schemas:
    ContainsOneOfPolymorphicTypes:
      type: object
      properties:
        one_one_of:
          oneOf:
            - $ref: "#/components/schemas/PolymorphicTypeOneA"
            - $ref: "#/components/schemas/PolymorphicTypeTwoA"
        many_one_of:
          type: array
          items:
            oneOf:
              - $ref: "#/components/schemas/PolymorphicTypeOneB"
              - $ref: "#/components/schemas/PolymorphicTypeTwoB"
            discriminator:
              propertyName: generation

    PolymorphicSuperTypeOne:
      x-fabric-resource-definition: true
      type: object
      discriminator:
        propertyName: shared
      required:
        - shared
      properties:
        shared:
          type: string
    PolymorphicTypeOneA:
      allOf:
        - $ref: "#/components/schemas/PolymorphicSuperTypeOne"
        - type: object
          properties:
            whateverA:
              type: string
    PolymorphicTypeOneB:
      allOf:
        - $ref: "#/components/schemas/PolymorphicSuperTypeOne"
        - type: object
          properties:
            whateverB:
              type: integer
              format: int32
    PolymorphicSuperTypeTwo:
      x-fabric-resource-definition: true
      type: object
      discriminator:
        propertyName: shared
      required:
        - shared
      properties:
        shared:
          type: string
    PolymorphicTypeTwoA:
      allOf:
        - $ref: "#/components/schemas/PolymorphicSuperTypeTwo"
        - type: object
          properties:
            whateverC:
              type: string
    PolymorphicTypeTwoB:
      allOf:
        - $ref: "#/components/schemas/PolymorphicSuperTypeTwo"
        - type: object
          properties:
            whateverD:
              type: integer
              format: int32

    ParentSpec:
      type: object
      discriminator:
        propertyName: type
      required:
        - type
      properties:
        type:
          $ref: '#/components/schemas/ParentType'

    ParentType:
      type: string
      description: Shows which child type is being returned
      x-extensible-enum:
        - "CHILD_TYPE_A"
        - "CHILD_TYPE_B"

    ChildTypeA:
      allOf:
        - $ref: '#/components/schemas/ParentSpec'
        - type: object
          required:
            - some_string
          properties:
            some_string:
              type: string

    ChildTypeB:
      allOf:
        - $ref: '#/components/schemas/ParentSpec'
        - type: object
          required:
            - some_int
          properties:
            some_int:
              type: integer